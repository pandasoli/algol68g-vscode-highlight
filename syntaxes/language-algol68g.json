{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Algol68g",
	"fileTypes": [
		"a68"
	],
	"patterns": [
		{ "include": "#variables" },
		{ "include": "#commands" },
		{ "include": "#strings" },
		{ "include": "#comments" },
		{ "include": "#identifiers" },
		{ "include": "#numbers" },
		{ "include": "#operators" },
		{ "include": "#separators" }
	],
	"repository": {
		"variables": {
			"patterns": [
				{ "name": "constant.language.false.Algol68g", "match": "FALSE" },
				{ "name": "constant.language.true.Algol68g", "match": "TRUE" },
				{ "name": "storage.type.bool.Algol68g", "match": "BOOL" },
				{ "name": "storage.type.int.Algol68g", "match": "INT" },
				{ "name": "storage.type.re.Algol68g", "match": "REAL" },
				{ "name": "storage.type.ch.Algol68g", "match": "CHAR" },
				{ "name": "storage.type.str.Algol68g", "match": "STRING" },
				{ "name": "storage.type.form.Algol68g", "match": "FORMAT" },
				{ "name": "storage.type.mode.Algol68g", "match": "MODE" },
				{ "name": "storage.type.op.Algol68g", "match": "OP" },
				{ "name": "storage.type.ref.Algol68g", "match": "REF" },
				{ "name": "storage.type.stru.Algol68g", "match": "STRUCT" },
				{ "name": "storage.type.cemp.Algol68g", "match": "COMPL" },
				{ "name": "storage.type.bits.Algol68g", "match": "BITS" },
				{ "name": "storage.type.file.Algol68g", "match": "FILE" },
				{ "name": "storage.type.union.Algol68g", "match": "UNION" },
				{ "name": "storage.type.sema.Algol68g", "match": "SEMA" },
				{
					"name": "variable.language.function.Algol68g",
					"match": "new\\ line|newline|FLEX|sqrt|stop|UPB|LWB|LEVEL"
				}
			]
		},
		"commands": {
			"patterns": [
				{
					"name": "keyword.control.Algol68g",
					"match": "\\b(IF|OR|AND|WHILE|OF|PAR|FOR|DO|OD|FI|PROC|BEGIN|END|GO|TO|FROM|THEN|ELIF|ELSE|PR)\\b"
				},
				{
					"name": "keyword.operator.commands.Algol68g",
					"match": "printf|print|read|system|space|whole|open|getf|get|close|on\\ logical\\ file\\ end|putf|put|associate|DOWN|UP"
				},
				{
					"name": "keyword.operator.response.Algol68g",
					"match": "(VOID|BOOL|INT|REAL|CHAR|STRING|REF|STRUCT|COMPL|BITS|FILE|UNION|SEMA)\\:"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.decimal.Algol68g",
					"match": "\\b(\\+|−|-)?([0-9]+(\\.[0-9]+)?((⏨|e)(\\+|−|-)?[0-9]+)?|\\.[0-9]+((⏨|e)(\\+|−|-)?[0-9]+)?|⏨(\\+|−|-)?[0-9]+)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.relational.Algol68g",
					"match": "=|/=|<=|>="
				},
				{
					"name": "keyword.operator.assignment.Algol68g",
					"match": ":="
				},
				{
					"name": "keyword.operator.arithmetic.Algol68g",
					"match": "\\+|−|-|×|\\*|/|÷|//|↑|\\*\\*|UP"
				}
			]
		},
		"separators": {
			"patterns": [
				{ "name": "punctuation.separator.comma.Algol68g", "match": "," },
				{ "name": "punctuation.separator.colon.Algol68g", "match": ":" }
			]
		},
		"identifiers": {
			"patterns": [
				{
					"name": "variable.other.identifier.Algol68g",
					"match": "\\b[A-Za-z][0-9A-Za-z]*\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.Algol68g",
			"begin": "\"",
			"end": "\""
		},
		"comments": {
			"patterns": [
				{
					"contentName": "comment.block.Algol68g",
					"begin": "#",
					"end": "#"
				},
				{
					"contentName": "comment.block.Algol68g",
					"begin": "CO",
					"end": "CO"
				}
			]
		}
	},
	"scopeName": "syntax"
}